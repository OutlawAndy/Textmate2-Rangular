<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

require ENV['TM_SUPPORT_PATH'] + '/lib/exit_codes'

# hotFlamingCats -&gt; hot-flaming-cats
def to_dashcase word
	word.gsub(/([A-Z])(?=[a-z0-9])/,'-\1').downcase
end

# hot_flaming_cats -&gt; hotFlamingCats
def to_camelcase word
  word.gsub(/-([^-]+)/) { $1.capitalize }
end

word = STDIN.read

TextMate.exit_discard if word.nil?

is_camelcase = -&gt;(word){ !!(/[A-Z]/ =~ word) }
is_dashcase = -&gt;(word){ !!(/[-]/ =~ word) }

print case word
when is_camelcase
  to_dashcase word
when is_dashcase
  to_camelcase word
else
	word
end
</string>
	<key>input</key>
	<string>selection</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>@-</string>
	<key>name</key>
	<string>camelCase 2 dash-case</string>
	<key>outputCaret</key>
	<string>heuristic</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>replaceInput</string>
	<key>scope</key>
	<string>text.html</string>
	<key>uuid</key>
	<string>757CE912-6A55-4468-8824-ACFBF753BFA6</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
